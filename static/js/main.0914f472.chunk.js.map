{"version":3,"sources":["component/ContactList/ContactList.js","component/Filter/Filter.js","component/ContactForm/ContactForm.js","App.js","index.js","component/ContactForm/ContactForm.module.css","component/ContactList/ContactList.module.css"],"names":["ContactList","contacts","onRemoveContact","className","styles","TaskList","map","contact","TaskList_item","name","number","TaskList_button","type","onClick","id","Filter","value","onChangeFilter","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","TaskEditor_button","Component","App","filter","addContact","task","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0914f472.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.TaskList}>\r\n    {contacts.map(contact => (\r\n      <li className={styles.TaskList_item} key={contact.id}>\r\n        {contact.name + ':' + contact.number}\r\n        {\r\n          <button\r\n            className={styles.TaskList_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.TaskEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.TaskEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.TaskEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from './component/ContactList';\nimport Filter from './component/Filter';\nimport ContactForm from './component/ContactForm';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    console.log('App componentDidMaunt');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновилось поле contacts');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = task => {\n    const searchSameName = this.state.contacts\n      .map(cont => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert('Fields must be filled!');\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__MBQ7h\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__1pza1\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__1kRQQ\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__2Azl_\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__2yDYG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__RWbEv\",\"TaskList_item\":\"ContactList_TaskList_item__1SJcD\",\"completed\":\"ContactList_completed__3IdpP\",\"TaskList_text\":\"ContactList_TaskList_text__2nqdj\",\"TaskList_actions\":\"ContactList_TaskList_actions__1EsM0\",\"TaskList_button\":\"ContactList_TaskList_button__GuFeJ\"};"],"sourceRoot":""}